# utils.py

from django.http import HttpResponse
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4, LETTER, A3, A5, A6
from reportlab.lib.units import mm
from io import BytesIO
from PIL import Image
import os

def pdf_response(layout):
    """Generate a PDF with the sticker layout"""
    
    # Create a file-like buffer to receive PDF data
    buffer = BytesIO()
    
    # Get paper size
    paper_name = layout.paper_size.name
    width_mm = layout.paper_size.width_mm
    height_mm = layout.paper_size.height_mm
    
    # Convert millimeters to points (1 inch = 25.4 mm, 1 inch = 72 points)
    width_pt = width_mm * 72 / 25.4
    height_pt = height_mm * 72 / 25.4
    
    # Create the PDF object with correct page size
    p = canvas.Canvas(buffer, pagesize=(width_pt, height_pt))
    
    # Scale factor: 1 mm = 72/25.4 points
    scale_factor = 72 / 25.4
    
    # Open the original image
    img = Image.open(layout.original_image.path)
    
    # Get sticker dimensions
    sticker_width_mm = layout.sticker_width
    sticker_height_mm = layout.sticker_height
    
    # Convert to points
    sticker_width_pt = sticker_width_mm * scale_factor
    sticker_height_pt = sticker_height_mm * scale_factor
    
    # Calculate scale factor for the image
    # We need to scale the image to fit the sticker dimensions
    img_width, img_height = img.size
    img_scale_x = sticker_width_pt / img_width
    img_scale_y = sticker_height_pt / img_height
    img_scale = min(img_scale_x, img_scale_y)  # Maintain aspect ratio
    
    # Create a temporary file for the image
    temp_img_path = f"/tmp/sticker_{layout.id}.png"
    img.save(temp_img_path)
    
    # Draw all stickers based on the layout positions
    for position in layout.layout_data['positions']:
        x_mm = position['x']
        y_mm = position['y']
        
        # Convert to points from bottom left (ReportLab uses bottom-left as origin)
        x_pt = x_mm * scale_factor
        y_pt = height_pt - (y_mm * scale_factor) - sticker_height_pt
        
        # Draw the image
        p.drawImage(
            temp_img_path, 
            x_pt, 
            y_pt, 
            width=sticker_width_pt, 
            height=sticker_height_pt, 
            preserveAspectRatio=True
        )
    
    # Clean up the temporary file
    os.remove(temp_img_path)
    
    # Add metadata
    p.setTitle(f"Sticker Layout - {layout.name}")
    p.setAuthor("Sticker Layout Generator")
    p.setSubject("Sticker Layout for Printing")
    
    # Add page numbers
    p.setFont("Helvetica", 8)
    p.drawRightString(
        width_pt - 10, 
        10, 
        f"Page 1 - Generated by Sticker Layout Generator"
    )
    
    # Save the PDF
    p.showPage()
    p.save()
    
    # Move to the beginning of the buffer
    buffer.seek(0)
    
    # Create the HTTP response with PDF content
    response = HttpResponse(buffer, content_type='application/pdf')
    response['Content-Disposition'] = f'attachment; filename="{layout.name}.pdf"'
    
    return response